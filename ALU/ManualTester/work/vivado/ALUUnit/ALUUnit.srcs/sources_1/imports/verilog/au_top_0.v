/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module au_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    input usb_rx,
    output reg usb_tx,
    output reg [23:0] io_led,
    output reg [7:0] io_seg,
    output reg [3:0] io_sel,
    input [4:0] io_button,
    input [23:0] io_dip
  );
  
  
  
  reg rst;
  
  wire [(3'h5+0)-1:0] M_buttoncond_out;
  reg [(3'h5+0)-1:0] M_buttoncond_in;
  
  genvar GEN_buttoncond0;
  generate
  for (GEN_buttoncond0=0;GEN_buttoncond0<3'h5;GEN_buttoncond0=GEN_buttoncond0+1) begin: buttoncond_gen_0
    button_conditioner_1 buttoncond (
      .clk(clk),
      .in(M_buttoncond_in[GEN_buttoncond0*(1)+(1)-1-:(1)]),
      .out(M_buttoncond_out[GEN_buttoncond0*(1)+(1)-1-:(1)])
    );
  end
  endgenerate
  wire [(3'h5+0)-1:0] M_buttondetect_out;
  reg [(3'h5+0)-1:0] M_buttondetect_in;
  
  genvar GEN_buttondetect0;
  generate
  for (GEN_buttondetect0=0;GEN_buttondetect0<3'h5;GEN_buttondetect0=GEN_buttondetect0+1) begin: buttondetect_gen_0
    edge_detector_2 buttondetect (
      .clk(clk),
      .in(M_buttondetect_in[GEN_buttondetect0*(1)+(1)-1-:(1)]),
      .out(M_buttondetect_out[GEN_buttondetect0*(1)+(1)-1-:(1)])
    );
  end
  endgenerate
  wire [16-1:0] M_press_out_a;
  wire [16-1:0] M_press_out_b;
  wire [6-1:0] M_press_out_alufn;
  wire [16-1:0] M_press_out_compute;
  wire [3-1:0] M_press_out_nvz;
  wire [24-1:0] M_press_io_led;
  reg [5-1:0] M_press_buttons;
  reg [24-1:0] M_press_io_dip;
  manualPress_3 press (
    .clk(clk),
    .rst(rst),
    .buttons(M_press_buttons),
    .io_dip(M_press_io_dip),
    .out_a(M_press_out_a),
    .out_b(M_press_out_b),
    .out_alufn(M_press_out_alufn),
    .out_compute(M_press_out_compute),
    .out_nvz(M_press_out_nvz),
    .io_led(M_press_io_led)
  );
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_4 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    usb_tx = usb_rx;
    led = 8'h00;
    io_led = 24'h000000;
    io_seg = 8'hff;
    io_sel = 4'hf;
    M_press_io_dip = io_dip;
    M_buttoncond_in = io_button;
    M_buttondetect_in = M_buttoncond_out;
    M_press_buttons = M_buttondetect_out;
    io_led[0+7-:8] = M_press_out_compute[0+7-:8];
    io_led[8+7-:8] = M_press_out_compute[8+7-:8];
    io_led[16+7-:8] = M_press_out_nvz;
  end
endmodule
